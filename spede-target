#!/bin/bash

spede_root=${SPEDE_ROOT:-/opt/spede}

typeset -A qemu_defaults
qemu_defaults=(
    [monitor]=""
    [display]="-display gtk,grab-on-hover=off"
    [socket]="./spede.sock"
    [logfile]="/dev/null"
    [image]="${spede_root}/share/images/spede-target/spede-target.qcow2"
    [qemu]="qemu-system-i386"
    [qmp]="${spede_root}/bin/qemu-qmp"
    [background]=1
    [console]=0
    [xsession]=1
)

typeset -A qemu_config
for i in ${!qemu_defaults[*]}; do
    qemu_config[${i}]=${qemu_defaults[${i}]}
done

function usage() {
    self=$(basename $0)
    echo "Usage: ${self} [options]"
    echo ""
    echo "Options:"
    echo "  -d | --display     Specifies which type of display to support:"
    echo "                       vnc:     Creates a VNC server"
    echo "                       console: Outputs to the current terminal/console"
    echo "                       default: Opens a window in the current desktop session"
    echo ""
    echo "  -m | --monitor     Enables the QEMU monitor via standard input/output"
    echo "                       console: Opens the monitor on the current terminal/console"
    echo "                       socket:  Opens the monitor on a socket"
    echo "                       default: none"
    echo ""
    echo "  -s | --socket      Specifies the control socket location for other scripts"
    echo "                     or programs to communicate with the QEMU session"
    echo "                       default: ./qemu.sock"
    echo ""
    echo "  -l | --logfile     Specifies the log file location"
    echo "                       default: ./qemu.sock"
    echo ""
    echo "  -i | --image       Specifies the SPEDE Target image to execute (not .dli)"
    echo ""
    echo "  -q | --quit        Quits the SPEDE Target"
    echo ""
    echo "The SPEDE Target will run the background unless one of the following options"
    echo "are specified:"
    echo "  --monitor console"
    echo "  --display term"
    echo ""
    echo "If both '--monitor console' and '--display term' are configured, '--display'"
    echo "will be reset to default"
    echo ""
}

function check_deps() {
    qemu=$(which ${qemu_config[qemu]})
    if [[ $? -ne 0 || ! -x ${qemu} ]]; then
        echo "QEMU is not installed or cannot be executed"
        return 1
    fi
    return 0

    jq=$(which jq)
    if [[ $? -ne 0 || ! -x ${jq} ]]; then
        echo "Error: jq is not installed or not executable"
        return 1
    fi
}

function main() {
    check_deps || return $?

    flag_quit=0

    temp=$(getopt -o hm:d:s:l:i:q --long help,monitor:,display:,socket:,logfile:,image:,quit -n spede-target -- "$@")

    if [ $? -ne 0 ]; then
        echo ""
        usage
        return 1
    fi

    while true; do
        case "$1" in
            -h | --help)
                usage
                return 0
                ;;

            -m | --monitor)
                case "$2" in
                    console)
                        qemu_config[monitor]="-monitor stdio"
                        qemu_config[background]=0
                        qemu_config[console]+=1
                        ;;

                    socket)
                        qemu_config[monitor]="-monitor unix:spede-monitor.sock,server,nowait"
                        ;;

                    default)
                        ;;

                    *)
                        usage
                        return 1
                        ;;
                esac

                shift 2
                ;;

            -d | --display)
                case "$2" in
                    console)
                        qemu_config[display]="-display curses"
                        qemu_config[background]=0
                        qemu_config[console]+=1
                        qemu_config[xsession]=0;
                        ;;

                    vnc)
                        qemu_config[display]="-display vnc=:0"
                        qemu_config[xsession]=0;
                        ;;

                    default)
                        ;;

                    *)
                        usage
                        return 1
                        ;;
                esac

                shift 2
                ;;

            -s | --socket)
                qemu_config[socket]=$2
                shift 2
                ;;

            -l | --logfile)
                qemu_config[logfile]=$2
                shift 2
                ;;

            -i | --image)
                qemu_config[image]=$2
                shift 2
                ;;

            -q | --quit)
                flag_quit=1
                shift
                ;;

            -- )
                shift
                break
                ;;

            *)
                break
                ;;
        esac
    done

    if [ ${qemu_config[console]} -gt 1 ]; then
        echo "Monitor is configured for console, resetting display to default"
        qemu_config[display]=${qemu_defaults[display]}
        qemu_config[xsession]=1
    fi

    if [[ -v CONFIG_DUMP ]]; then
        echo "SPEDE Root: ${spede_root}"
        echo ""

        echo "Defaults:"
        for i in ${!qemu_defaults[*]}; do
            echo "  ${i}: ${qemu_defaults[${i}]}"
        done
        echo ""

        echo "Config:"
        for i in ${!qemu_config[*]}; do
            echo "  ${i}: ${qemu_config[${i}]}"
        done
        echo ""

        return
    fi

    if [ -S ${qemu_config[socket]} ]; then
        # Determine if the SPEDE target is running
        # If it is _not_ running, delete the socket and continue
        status=$(spede_target_status)

        if [[ $? -ne 0 || "${status}" != "running" ]]; then
            echo "The socket file '${qemu_config[socket]}' exists but SPEDE doesn't appear to be running"
            echo ""
            read -p "Delete the socket and continue execution? (y/n) " confirm

            case "${confirm}" in
                [yY]|[yY][eE][sS] )
                    ;;

                *)
                    echo "Exiting..."
                    return 1
            esac
        else
            if [ ${flag_quit} -eq 1 ]; then
                output=$(__qemu_exec quit)

                if [ $? -ne 0 ]; then
                    echo "Error: Unable to quit the SPEDE Target. Exiting..."
                    return 1
                else
                    echo "The SPEDE Target has quit. Exiting..."
                    return 0
                fi
            fi

            echo "Error: The SPEDE Target is already running and can't be started again with the same socket"
            return 1
        fi

        rm ${qemu_config[socket]}
        if [ $? -ne 0 ]; then
            echo "Error deleting socket '${qemu_config[socket]}'. Exiting ..."
            return 1
        fi
    elif [ -f ${qemu_config[socket]} ]; then
        echo "Socket '${qemu_config[socket]}' is not a valid socket. Exiting..."
        return 1
    fi

    if [ ${flag_quit} -eq 1 ]; then
        echo "The SPEDE Target is not running"
        return 0
    fi

    if [ ${qemu_config[xsession]} -eq 1 ]; then
        xhost >&/dev/null
        if [ $? -ne 0 ]; then
            echo "Error: Display is configured to use local desktop session but none exists"
            return 1
        fi
    fi

    if [ ${qemu_config[background]} -ne 0 ]; then
        echo "Launching SPEDE target to run in the background"
        launch_spede_target >>${qemu_config[logfile]} 2>&1 &

        sleep 1

        if [ ! -S ${qemu_config[socket]} ]; then
            echo "The SPEDE target does not appear to have started correctly."
            echo "Enable logging and try again if the problem continues."
            return 1
        fi

        status=$(spede_target_status)

        if [[ $? != 0 || "${status}" != "running" ]]; then
            echo "The SPEDE target does not appear to have started correctly."
            echo "Enable logging and try again if the problem continues."
            rm ${qemu_config[socket]}
            return 1
        fi
    else
        echo "Launching SPEDE target to run in the foreground"
        launch_spede_target

        # Remove the socket once the spede target exits
        if [ -S ${qemu_config[socket]} ]; then
            rm ${qemu_config[socket]}
        fi
    fi
}

function __qemu_exec() {
    json=$(${qemu_config[qmp]} --socket ${qemu_config[socket]} $1 2>/dev/null)
    if [ $? -ne 0 ]; then
        return 1
    fi

    echo ${json}
    return 0
}

function spede_target_status() {
    json=$(__qemu_exec query-status)
    if [ $? -ne 0 ]; then
        return 1
    fi

    output=$(echo "${json}" | jq -r '.return.status')
    if [ $? -ne 0 ]; then
        return 1
    fi

    echo ${output}
    return 0
}

function launch_spede_target() {
    echo "Target is reachable via ${qemu_config[socket]}"

    ${qemu_config[qemu]} \
        -name "SPEDE Target" \
        -M pc \
        -cpu 486 \
        -smp 1 \
        -m 32M \
        -snapshot \
        -drive file=${qemu_config[image]} \
        -chardev pty,id=com1 \
        -serial chardev:com1 \
        -chardev pty,id=com2 \
        -serial chardev:com2 \
        -chardev pty,id=com3 \
        -serial chardev:com3 \
        -chardev pty,id=com4 \
        -serial chardev:com4 \
        -net none \
        -d cpu_reset,guest_errors \
        -D ${qemu_config[logfile]} \
        -qmp unix:${qemu_config[socket]},server,nowait \
        ${qemu_config[display]} \
        ${qemu_config[monitor]} 2>&1
}

main $@
exit $?
